# -*- coding: utf-8 -*-
"""M5 Ejercicio5 ErickSandoval.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1omfs2exh1Ymbzh38vEvNpeTo6MfLTt-k

# **Setup Data**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

url = ("https://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data")
abalone = pd.read_csv(url, header=None)
abalone.columns = ["Sex","Length","Diameter","Height","Whole weight","Shucked weight","Viscera weight","Shell weight","Rings",]
abalone.head(3)

abalone = abalone.drop('Sex', axis=1)
abalone.head(3)

"""# **Analisis Exploratorio**"""

abalone.info()

fig, axes = plt.subplots(nrows=8, ncols=1, figsize=(5,10))
axes = axes.flat
data = abalone.select_dtypes(include=['float64', 'int']).columns

for i, colum in enumerate(data):
    sns.histplot(
        data    = abalone,
        x       = colum,
        stat    = "count",
        kde     = True,
        color   = (list(plt.rcParams['axes.prop_cycle'])*2)[i]["color"],
        line_kws= {'linewidth': 2},
        alpha   = 0.3,
        ax      = axes[i]
    )
    axes[i].set_title(colum, fontsize = 10, fontweight = "bold")
    axes[i].tick_params(labelsize = 8)
    axes[i].set_xlabel("")


fig.tight_layout()
plt.subplots_adjust(top = 0.9)
fig.suptitle('Distribución variables numéricas', fontsize = 10, fontweight = "bold");

abalone.describe()

"""Al observar la distribucion de las variables, se logra identificar una tendencia a ser una distribucion normal en las variables de Length, Diameter, Height y Rings. Mientras que los pesos ("Weight's") distrubuyen normal positivamente.

Sin embargo, nuestra variable de interes "Rings", tiene una distribucion normal estandar mas marcada, para esto la observaremos mas detalladamente.

# **Distribucion Variable Interes "Rings"**
"""

sns.histplot(data=abalone['Rings'])

plt.tight_layout()
plt.show()

"""Comparando los datos obtenidos con el metodo Describe(), se observa claramente que la media esta aproximadamente en 10 rings, y que tambien existe una asimetria positiva en los valores de rings mas elevados.

# **Correlacion de las variables**
"""

correlation = abalone.corr()
correlation['Rings']

"""En cuanto a la correlacion de las variables con respuesto a la Variable Respuesta "Rings", se observa una correlacion moderada en la mayoria de las variables que sobrepasan un valor de 0.5. Exceptuando la variable Shucked Weight, que podria ser una candidata a ser descartada, debido a que es la variable con mas baja correlacion respecto a las demas.

# **Definiendo Distancias**
"""

X = abalone.drop('Rings', axis=1)
X = X.values
Y = abalone['Rings']
Y = Y.values

#AbulonMeanValues
abulonPoint = np.array([0.523992,0.407881,0.139516,0.828742,0.359367,0.180594,0.238831])

distances = np.linalg.norm(X - abulonPoint, axis=1)
display(distances)

"""Para observar algunos datos vecinos con algun punto de interes, se definio los valores promedios de todas las variables para observar que datos estan cercanos al promedio.

# **Determinando vecinos cercanos**
"""

k = 3

vecinosCercanos = distances.argsort()[:k]
display(vecinosCercanos)

"""Por ultimo, los datos vecinos que son cercanos a el punto definido anteriormente fueron los siguientes datos:"""

display(abalone.iloc[2892])
display(abalone.iloc[3833])
display(abalone.iloc[1599])