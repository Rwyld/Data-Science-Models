# -*- coding: utf-8 -*-
"""M7 Ejercicio2 ErickSandoval.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C_8_3qaIaFneuyefrJz1SQ1wuL4f827S

# **Setup**
"""

import tensorflow as tf
from tensorflow import keras

from datetime import datetime
import numpy as np
import matplotlib.pyplot as plt

from PIL import Image
import requests
from io import BytesIO

import cv2 #Rescalar imagenes
print(tf.__version__)

"""# **Data**"""

data = keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = data.load_data()

classNames = ['Camiseta', 'Pantalón', 'Suéter', 'Vestido', 'Abrigo', 'Sandalia', 'Camisa', 'Zapatilla deportiva', 'Bolso', 'Botines']

plt.figure(figsize=(10,10))
for i in range(5):
  plt.subplot(5,10,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(train_images[i], cmap=plt.cm.binary)
  plt.xlabel(classNames[train_labels[i]])
  plt.show()

train_images = train_images / 255
test_images = test_images / 255

"""# **Red Neuronal**

### **Configuracion**
"""

model = keras.Sequential([
 keras.layers.Flatten(input_shape=(28,28)),
 keras.layers.Dense(200, activation=tf.nn.relu), 
 keras.layers.Dense(10, activation=tf.nn.softmax)
])

"""### **Compilacion**"""

model.compile(
    optimizer = 'adam', 
    loss = 'sparse_categorical_crossentropy',
    metrics=['accuracy'])

model.summary()

"""# **Ajustando la red**"""

model.fit(train_images,
train_labels,
epochs=10)

test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Test accuracy:', test_acc)

"""# **Predicciones**"""

predictions = model.predict(test_images)
img_predict = predictions[9]

img_predict = predictions[1996]
classNum = np.argmax(img_predict) 
classNames[classNum]

index = np.arange(len(classNames))
plt.bar(index, img_predict, )
plt.ylabel('Confiabilidad', fontsize=15)
plt.xticks(index, classNames, fontsize=15, rotation=45, ha = 'right')
plt.title('Predicciones')

plt.show()

plt.figure()
plt.imshow(test_images[1996])
plt.colorbar()
plt.grid(False)
plt.show()

"""# **Concluyendo**

En conclusion, la red neuronal realizada posee una precision de un 88% para la identificacion de imagenes de prendas de vestir. La red fue configurada con 200 neuronas y podria aumentarse (o incluir mas capas) para probar si la precision del modelo aumenta, considerando que podria afectar el rendimiento de este.
"""